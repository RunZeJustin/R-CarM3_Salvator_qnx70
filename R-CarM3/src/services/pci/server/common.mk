ifndef QCONFIG
QCONFIG=qconfig.mk
endif
include $(QCONFIG)

NAME=pci-server
SERVER_VERSION=1.6
# IMPORTANT - if you bump the SO_VERSION, do everyone a favour and add comments
#			  to the .use file indicating what changed

USEFILE=$(PROJECT_ROOT)/$(NAME).use

INSTALLDIR=sbin/

# version information is included in the 'use' message. Also include it here
define PINFO
PINFO DESCRIPTION="PCI Server (Resource Manager) v1.7"
endef

ENDIAN=$(filter le be, $(VARIANT_LIST))
#ENDIAN=$(patsubst %e,-%e,$(END))

EXTRA_SRCVPATH += $(PROJECT_ROOT)/src/
EXTRA_SRCVPATH += $(PROJECT_ROOT)/src/msg
EXTRA_SRCVPATH += $(PROJECT_ROOT)/src/parse
EXTRA_SRCVPATH += $(PROJECT_ROOT)/src/module_support

EXTRA_INCVPATH+=$(PROJECT_ROOT)/../../../lib/pci
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../../../lib/pci/public
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/hw
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/server/bus_config
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/server/event_handler
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/server
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/bkwd_compat
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/capabilities
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/capabilities/public
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/slog
EXTRA_INCVPATH+=$(PROJECT_ROOT)/../modules/debug

CCFLAGS+=-DMODULE_VERSION="\"$(subst .,_,$(SERVER_VERSION))\""

# remove this flag when we no longer support the backwards compatibility module
CCFLAGS+=-DBKWD_COMPAT_SUPPORT

# the -Wl,--export-dynamic is required to allow modules to find global symbols
# within the pci-server executable
LDOPTS+=-lpci -Wl,--export-dynamic


#####AUTO-GENERATED by packaging script... do not checkin#####
   INSTALL_ROOT_nto = $(PROJECT_ROOT)/../../../../install
   USE_INSTALL_ROOT=1
##############################################################

include $(MKFILES_ROOT)/qtargets.mk


ifeq ($(findstring v7, $(VARIANT_LIST)),v7)
EXTRA_LIBVPATH+=$(PROJECT_ROOT)/../../../lib/pci/so/$(CPU)/$(ENDIAN).v7/
# FIX ME
# Sep 2/2015
# As I was testing for the MAINLINE submission (using builf #2017) I discoved
# that on the J5 EVM that the downstream devices were not being discovered and
# that I had to add -O0 to the compilation of the pci-server component.
# Without any further investigation, my hunch is that there might be something
# wrong in the SIGBUS handling for non-existent devices. Anyway, since MAINLINE
# isn't really that stable yet (I have to use build #1980 host tools) this will
# need to be the workaround.
CCFLAGS+=-O0
else
EXTRA_LIBVPATH+=$(PROJECT_ROOT)/../../../lib/pci/so/$(CPU)/$(ENDIAN)/
endif

# The following will produce an archive of the installed components.
# PACKAGE_FILES should be set to the name of the artifact (no path information) 
# PROJECT_BASE should be set to the top level directory
# If the $(PROJECT_BASE)/package.mk is removed, packaging does nothing
PACKAGE_FILES=$(BUILDNAME)
PROJECT_BASE=$(PROJECT_ROOT)/../
-include $(PROJECT_BASE)/package.mk
