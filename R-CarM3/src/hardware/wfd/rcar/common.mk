ifndef QCONFIG
QCONFIG=qconfig.mk
endif
include $(QCONFIG)

include $(MKFILES_ROOT)/qmacros.mk

IS_DEBUG_BUILD:=$(filter g, $(VARIANT_LIST))
DBG_LIBSUFFIX:=$(if $(IS_DEBUG_BUILD),_g)
DBG_DIRSUFFIX:=$(if $(IS_DEBUG_BUILD),-debug)

# Set the driver name.
WFD_CHIPLIST:=rcar
WFD_CHIPNAME=$(filter $(WFD_CHIPLIST),$(VARIANT_LIST))
NAME=libWFDrcar

EXTRA_SILENT_VARIANTS += $(WFD_CHIPLIST)

INSTALLDIR=usr/lib/graphics/R_CarM3

EXTRA_INCVPATH += $(PRODUCT_ROOT)/common/

define PINFO
PINFO DESCRIPTION = OpenWF Display for R-CarM3
endef

#EXTRA_LIBVPATH += $(PROJECT_ROOT)/../vsp/arm/a-le-v7/

#####AUTO-GENERATED by packaging script... do not checkin#####
   INSTALL_ROOT_nto = $(PROJECT_ROOT)/../../../../install
   USE_INSTALL_ROOT=1

LIBS+= disputil m

# We need to link against a cfglib to ensure the WFD driver can find the
# symbols it requires.  They all have the same SONAME, so we can just link
# against the stub installed by lib/wfdcfg.
LDOPTS += -lwfdcfg-stub
#
# At runtime, a library with the proper SONAME must exist before Screen loads
# the WFD driver's .so file (otherwise a linker error will occur).  Therefore
# one of the cfglibs must precede it in the "wfd-dlls" line of graphics.conf.

include $(MKFILES_ROOT)/qtargets.mk

-include $(PROJECT_ROOT)/roots.mk


WIN32_ENVIRON=mingw

RCAR_HEADERS += macros.h
EXTRA_CCDEPS += $(foreach header,$(RCAR_HEADERS),$(PROJECT_ROOT)/$(SECTION)/$(header))

-include $(PROJECT_ROOT)/local.mk  # optional (for debugging)
